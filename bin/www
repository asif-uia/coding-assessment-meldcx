#!/usr/bin/env node

/* module dependencies */
const http = require("http")
const app = require("../app")
const { cronJob } = require("../cron")
require('dotenv').config()

/* Get host and port from environment */
const port = process.env.PORT || "4001"
const host = process.env.HOST || "localhost"

app.set("port", port)

/* schedule a cronjob to cleanup inactive files every 30 minutes */
cronJob()

/* Create an HTTP server. */
const server = http.createServer(app)

/* Listen on provided port, on all network interfaces. */
server.listen(port)
server.on("listening", onListening)

// catch ctrl-c event and proceed to shutdown
process.on("SIGINT", onShutdown)
process.on("message", msg => {
	if (msg === "shutdown") {
		setTimeout(onShutdown, 1500)
	}
})

/* Event listener for HTTP server "listening" event. */
function onListening() {
	const addr = server.address()
	console.debug(`Server Listening on port ${addr.port}`)
}

/* Event listener for HTTP server "shutdown" event */
function onShutdown() {
	const callback = function (err) {
		if (err) {
			process.exit(1)
		}

		console.info("Server closed")
		process.exit(0)
	}

	server.on("close", (error) => {
		if (error) return callback(error)

		callback()
	})
}
